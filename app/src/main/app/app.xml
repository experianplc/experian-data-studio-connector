<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:collibra-dgc="http://www.mulesoft.org/schema/mule/collibra-dgc" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/collibra-dgc http://www.mulesoft.org/schema/mule/collibra-dgc/current/mule-collibra-dgc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <collibra-dgc:config name="CollibraDGC__Connection_Managament_type_strategy" username="Admin" password="Password123" baseApplicationUrl="https://experian-dev-54.collibra.com" doc:name="CollibraDGC: Connection Managament type strategy"/>
    <db:generic-config name="Generic_Database_Configuration" url="jdbc:postgresql://localhost:5432/test?user=postgres&amp;password=postgres" driverClassName="org.postgresql.Driver" doc:name="Generic Database Configuration"/>
    <file:connector name="File" autoDelete="false" streaming="true" validateConnections="true" doc:name="File" outputAppend="true">
    </file:connector>
    <flow name="sendPandoraAlertsFlow" processingStrategy="synchronous">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="15" timeUnit="SECONDS"/>
            <watermark variable="lastRecordId" default-expression="0" selector="MAX" selector-expression="#[payload[&quot;UID&quot;]]"/>
            <db:select config-ref="Generic_Database_Configuration"  target="#[payload]" maxRows="10" fetchSize="10" doc:name="Alerts Database">
                <db:dynamic-query><![CDATA[select * from "ALERTS" 
where "UID" > #[flowVars['lastRecordId']] 
order by "UID" asc]]></db:dynamic-query>
            </db:select>
        </poll>
        <choice doc:name="Choice">
            <when expression="#[payload.isEmpty() == false]">
                <set-payload value="  " doc:name="Set Payload"/>
                <file:outbound-endpoint path="C:\pandora\import" outputPattern="TEST_VOYA_trigger.xml" connector-ref="File" responseTimeout="10000" doc:name="File"/>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger" />
            </otherwise>
        </choice>
    </flow>
    <flow name="updateRulesFlow" processingStrategy="synchronous">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="15" timeUnit="SECONDS"/>
            <watermark variable="lastValidatedTime" default-expression="1970-01-01" selector="MAX" selector-expression="#[payload[&quot;Last Validated&quot;]]"/>
            <db:select config-ref="Generic_Database_Configuration" target="#[payload]" maxRows="10" fetchSize="10" doc:name="Rules Database">
                <db:dynamic-query><![CDATA[select * from "pandora_rules"
order by "Last Validated" asc]]></db:dynamic-query>
            </db:select>
        </poll>
        <foreach counterVariableName="ruleIndex" rootMessageVariableName="rules" doc:name="For Each">
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
 "externalSystemId": "Pandora 5.9.3",
 "communityName": "MyCommunity",
 "results": [{
	 "externalEntityId": payload.external_database ++ "." ++ payload.external_schema ++ "." ++ payload.external_table_name,
	 "name": payload.name,
	 "dataQualityRuleName": splitBy(payload.description, ".")[0] when sizeOf(splitBy(payload.description, ".")) >= 1 otherwise "",
	 "note": payload.function,
	 "dimension": splitBy(payload.description, ".")[1] when sizeOf(splitBy(payload.description, ".")) >= 2 otherwise "",
	 "description": splitBy(payload.description, ".")[2] when sizeOf(splitBy(payload.description, ".")) == 3 otherwise "",
	 "evaluatedColumns": [{
		 "databaseName": payload.external_database,
		 "schemaName": payload.external_schema,
		 "tableName": payload.external_table_name,
		 "name": payload.external_column_name
 	 }],
 "rowsPassed": payload.rows_passed,
 "rowsFailed": payload.rows_failed,
 "qualityScore": payload.score,
 "result": "false" unless payload.result == "Green" otherwise "true",
 "threshold": payload.threshold,
 "customAttributes": [{
	 "typeId": "",
	 "values": [""]
  }]	
 }]
}]]></dw:set-payload>
            </dw:transform-message>
            <logger  level="INFO" doc:name="Logger"/>
        </foreach>
    </flow>
</mule>
